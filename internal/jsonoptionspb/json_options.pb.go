// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: json_options.proto

package jsonoptionspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JsonUnmarshalOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// If set, unknown fields are ignored during ProtoJSON unmarshal.
	// This option doesn't affect how to handle unknown enums. You need
	// to set ignore_unknown_enums if you want to ignore unknown enum values.
	IgnoreUnknownFields bool `protobuf:"varint,1,opt,name=ignore_unknown_fields,json=ignoreUnknownFields,proto3" json:"ignore_unknown_fields,omitempty"`
	// If set, unknown enum name values are ignored.
	// The enum field will remain default (0) or unset if the field
	// has a field presence enabled.
	IgnoreUnknownEnums bool `protobuf:"varint,2,opt,name=ignore_unknown_enums,json=ignoreUnknownEnums,proto3" json:"ignore_unknown_enums,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *JsonUnmarshalOptions) Reset() {
	*x = JsonUnmarshalOptions{}
	mi := &file_json_options_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonUnmarshalOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonUnmarshalOptions) ProtoMessage() {}

func (x *JsonUnmarshalOptions) ProtoReflect() protoreflect.Message {
	mi := &file_json_options_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonUnmarshalOptions.ProtoReflect.Descriptor instead.
func (*JsonUnmarshalOptions) Descriptor() ([]byte, []int) {
	return file_json_options_proto_rawDescGZIP(), []int{0}
}

func (x *JsonUnmarshalOptions) GetIgnoreUnknownFields() bool {
	if x != nil {
		return x.IgnoreUnknownFields
	}
	return false
}

func (x *JsonUnmarshalOptions) GetIgnoreUnknownEnums() bool {
	if x != nil {
		return x.IgnoreUnknownEnums
	}
	return false
}

type JsonMarshalOptions struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// For proto3, emit default-valued primitive fields, empty lists,
	// and empty maps. This option doesn't affect if the field has
	// a field presence.
	EmitDefaultValues bool `protobuf:"varint,1,opt,name=emit_default_values,json=emitDefaultValues,proto3" json:"emit_default_values,omitempty"`
	// Emits enum values as numbers, instead of their names.
	UseEnumNumbers bool `protobuf:"varint,2,opt,name=use_enum_numbers,json=useEnumNumbers,proto3" json:"use_enum_numbers,omitempty"`
	// ONLY FOR INTERNAL USE.
	// Emits 64bit integer types (int64, uint64, fixed64, sfixed64, sint64) as numbers, instead of strings.
	EmitInt64SAsNumbers bool `protobuf:"varint,3,opt,name=emit_int64s_as_numbers,json=emitInt64sAsNumbers,proto3" json:"emit_int64s_as_numbers,omitempty"`
	// ONLY FOR INTERNAL USE.
	// Don't treat Well-known Types as special.
	// E.g. Timestamp becomes {"seconds": 61, "nanos": 123000000} instead of "1970-01-01T00:01:01.123Z".
	TreatWktAsNormalTypes bool `protobuf:"varint,4,opt,name=treat_wkt_as_normal_types,json=treatWktAsNormalTypes,proto3" json:"treat_wkt_as_normal_types,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *JsonMarshalOptions) Reset() {
	*x = JsonMarshalOptions{}
	mi := &file_json_options_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JsonMarshalOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JsonMarshalOptions) ProtoMessage() {}

func (x *JsonMarshalOptions) ProtoReflect() protoreflect.Message {
	mi := &file_json_options_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JsonMarshalOptions.ProtoReflect.Descriptor instead.
func (*JsonMarshalOptions) Descriptor() ([]byte, []int) {
	return file_json_options_proto_rawDescGZIP(), []int{1}
}

func (x *JsonMarshalOptions) GetEmitDefaultValues() bool {
	if x != nil {
		return x.EmitDefaultValues
	}
	return false
}

func (x *JsonMarshalOptions) GetUseEnumNumbers() bool {
	if x != nil {
		return x.UseEnumNumbers
	}
	return false
}

func (x *JsonMarshalOptions) GetEmitInt64SAsNumbers() bool {
	if x != nil {
		return x.EmitInt64SAsNumbers
	}
	return false
}

func (x *JsonMarshalOptions) GetTreatWktAsNormalTypes() bool {
	if x != nil {
		return x.TreatWktAsNormalTypes
	}
	return false
}

var File_json_options_proto protoreflect.FileDescriptor

const file_json_options_proto_rawDesc = "" +
	"\n" +
	"\x12json_options.proto\x12\rmysqlprotobuf\"|\n" +
	"\x14JsonUnmarshalOptions\x122\n" +
	"\x15ignore_unknown_fields\x18\x01 \x01(\bR\x13ignoreUnknownFields\x120\n" +
	"\x14ignore_unknown_enums\x18\x02 \x01(\bR\x12ignoreUnknownEnums\"\xdd\x01\n" +
	"\x12JsonMarshalOptions\x12.\n" +
	"\x13emit_default_values\x18\x01 \x01(\bR\x11emitDefaultValues\x12(\n" +
	"\x10use_enum_numbers\x18\x02 \x01(\bR\x0euseEnumNumbers\x123\n" +
	"\x16emit_int64s_as_numbers\x18\x03 \x01(\bR\x13emitInt64sAsNumbers\x128\n" +
	"\x19treat_wkt_as_normal_types\x18\x04 \x01(\bR\x15treatWktAsNormalTypesb\x06proto3"

var (
	file_json_options_proto_rawDescOnce sync.Once
	file_json_options_proto_rawDescData []byte
)

func file_json_options_proto_rawDescGZIP() []byte {
	file_json_options_proto_rawDescOnce.Do(func() {
		file_json_options_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_json_options_proto_rawDesc), len(file_json_options_proto_rawDesc)))
	})
	return file_json_options_proto_rawDescData
}

var file_json_options_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_json_options_proto_goTypes = []any{
	(*JsonUnmarshalOptions)(nil), // 0: mysqlprotobuf.JsonUnmarshalOptions
	(*JsonMarshalOptions)(nil),   // 1: mysqlprotobuf.JsonMarshalOptions
}
var file_json_options_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_json_options_proto_init() }
func file_json_options_proto_init() {
	if File_json_options_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_json_options_proto_rawDesc), len(file_json_options_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_json_options_proto_goTypes,
		DependencyIndexes: file_json_options_proto_depIdxs,
		MessageInfos:      file_json_options_proto_msgTypes,
	}.Build()
	File_json_options_proto = out.File
	file_json_options_proto_goTypes = nil
	file_json_options_proto_depIdxs = nil
}
